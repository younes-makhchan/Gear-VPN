plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-parcelize'
    id 'kotlin-kapt'
//    id 'com.google.gms.google-services'
//    id 'com.google.firebase.crashlytics'
    id 'com.spotify.ruler'
    id 'com.google.devtools.ksp'
    id "dev.shreyaspatil.compose-compiler-report-generator"
}

android {
    def props = new Properties()
    file("${rootProject.projectDir}/local.properties").withInputStream { props.load(it) }

    compileSdk 33

    defaultConfig {
        applicationId "com.kpstv.vpn"
        minSdk 21
        targetSdk 33
        versionCode app.versionCode
        versionName app.versionName

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables {
            useSupportLibrary true
        }

        buildConfigField("String", "GEAR_API", "\"${props.getProperty("gear.api")}\"")
        buildConfigField("String", "GEAR_API2", "\"${props.getProperty("gear.api2")}\"")
        buildConfigField("String", "GEAR_KEY", "\"${props.getProperty("gear.key")}\"")
        buildConfigField("String", "GEAR_HOST", "\"${props.getProperty("gear.host")}\"")
    }

    signingConfigs {
        release {
//            storeFile file(props.getProperty("signing.keyFile"))
//            storePassword props.getProperty("signing.storePassword")
//            keyAlias props.getProperty("signing.alias")
//            keyPassword props.getProperty("signing.keyPassword")
        }
    }

    buildTypes {
        release {
            minifyEnabled true
            signingConfig signingConfigs.release
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
        freeCompilerArgs += ["-opt-in=kotlin.RequiresOptIn"]
    }
    buildFeatures {
        compose true
    }
    composeOptions {
        kotlinCompilerExtensionVersion "1.2.0"
    }
    packagingOptions {
        pickFirsts = [
                "META-INF/AL2.0",
                "META-INF/LGPL2.1"
        ]
        jniLibs {
            useLegacyPackaging = true
        }
    }
}

kotlin {
    sourceSets {
        main.kotlin.srcDirs += 'build/generated/ksp/main/kotlin'
        test.kotlin.srcDirs += 'build/generated/ksp/test/kotlin'
    }
}

ruler {
    abi.set("arm64-v8a")
    locale.set("en")
    screenDensity.set(480)
    sdkVersion.set(31)
}

tasks.register('checkForChangelog') {
    doFirst {
        def versionCode = project.android.defaultConfig.versionCode
        def file = new File("$rootDir/fastlane/metadata/android/en-US/changelogs/${versionCode}.txt")
        if (!file.exists()) {
            throw new BuildCancelledException("Error: Please define a changelog for the versionCode $versionCode at \"fastlane\\metadata\\android\\en-US\\changelogs\"")
        }
    }
}

dependencies {
    implementation "androidx.core:core-ktx:1.7.0"
    implementation 'androidx.appcompat:appcompat:1.4.1'
    implementation "androidx.compose.ui:ui:1.2.0"
    implementation "androidx.compose.material:material:1.2.0"
    implementation "androidx.compose.ui:ui-tooling:1.2.0"
    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.4.1'
    implementation 'androidx.activity:activity-compose:1.4.0'
    implementation "androidx.constraintlayout:constraintlayout-compose:1.0.0"

    //noinspection GradleDependency
    implementation "androidx.localbroadcastmanager:localbroadcastmanager:1.0.0"
    implementation "com.github.GrenderG:Toasty:1.5.2"

    implementation "com.google.accompanist:accompanist-insets:0.17.0"
    implementation "com.google.accompanist:accompanist-swiperefresh:0.17.0"
    implementation "io.coil-kt:coil-compose:1.4.0"
    implementation "io.coil-kt:coil-gif:1.3.2"
    implementation("io.coil-kt:coil-svg:1.4.0")

    implementation "io.github.kaustubhpatange:navigator-compose:0.1-alpha36"

    implementation "org.jsoup:jsoup:1.13.1"

    implementation "com.squareup.okhttp3:okhttp:4.9.3"
    implementation "com.squareup.okhttp3:logging-interceptor:4.9.2"

    implementation "com.squareup.retrofit2:retrofit:2.9.0"
    implementation "com.squareup.retrofit2:converter-moshi:2.9.0"

    implementation "androidx.lifecycle:lifecycle-viewmodel-compose:2.4.1"

    implementation "androidx.work:work-runtime-ktx:2.7.1"

    implementation "androidx.room:room-runtime:2.4.2"
    implementation "androidx.room:room-ktx:2.4.2"
    ksp "androidx.room:room-compiler:2.4.2"

    implementation "com.google.dagger:dagger:2.44.2"
    kapt "com.google.dagger:dagger-compiler:2.44.2"

    implementation "com.airbnb.android:lottie-compose:4.0.0"
    implementation "androidx.browser:browser:1.4.0"

    implementation "io.github.kaustubhpatange:app-updater:1.2"

    implementation "com.android.billingclient:billing-ktx:6.0.0"
    implementation "androidx.datastore:datastore-preferences:1.0.0"

    implementation "org.jetbrains.kotlinx:kotlinx-collections-immutable:0.3.5"
    implementation 'com.google.android.play:core-ktx:1.8.1'

    implementation 'com.squareup.moshi:moshi:1.13.0'
    ksp 'com.squareup.moshi:moshi-kotlin-codegen:1.13.0'

    implementation project(":vpn")
    implementation project(":core-shared")
    implementation project(":core-logging")

//    debugImplementation 'com.squareup.leakcanary:leakcanary-android:2.7'

    testImplementation 'junit:junit:4.+'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
    androidTestImplementation "androidx.compose.ui:ui-test-junit4:1.2.0"
}